#! /usr/bin/env python3
import random
import webbrowser
import requests
import datetime
import convert_numbers
from argparse import ArgumentParser


def get_arabic(surah_number, ayah_number):
    # use isdigit to find out if there is only one ayah selected from the surah
    if ayah_number.isdigit():
        url = f'https://api.quran.com/api/v4/quran/verses/uthmani?verse_key={surah_number}%3A{ayah_number}'
        response = requests.get(url)
        ayah = response.json()

        # return the arabic text of that ayah
        return ayah['verses'][0]['text_uthmani']
    # if it is not a single digit, then we have to work a lot harder
    else:
        # since users will input [Ayahs] [start_num]-[end_num], we can split on the hyphen to get a list of ayah numbers
        endcaps = ayah_number.split("-")
        # unfortunately, we only have the start and end ayah numbers
        # so we need to get the ayah numbers in the middle for the api call
        start = int(endcaps[0])
        end = int(endcaps[1])

        # initialize a list to add the ayah numbers to 
        ayah_numbers = [str(start)]

        # loop through the list of ayah numbers
        for x in range(end - start):
            # since we know the first ayah number, we can add to it so we can 
            # continue the ayah numbers for the count of the above difference
            start += 1
            ayah_numbers.append(start)
        # now we have a list of the ayah numbers 

        # initialize a string variable to add the arabic text to
        ayahs_in_arabic = ""
        for x in ayah_numbers:
            # get the ayah in arabic that we are iterating
            url = f'https://api.quran.com/api/v4/quran/verses/uthmani?verse_key={surah_number}%3A{x}'
            response = requests.get(url)
            ayah = response.json()

            # we want to add the ayah number in the middle of the arabic text, but we do not have it in arabic
            # but we do know what ayah number it is. so we will use convert_numbers
            number = convert_numbers.english_to_arabic(x)
            ayahs_in_arabic += ayah['verses'][0]['text_uthmani'] + f"({number}) "
        return ayahs_in_arabic


def get_english(surah_number, ayah_number):
    if ayah_number.isdigit():
        url = f'https://api.quran.com/api/v4/quran/translations/85?verse_key={surah_number}%3A{ayah_number}'
        response = requests.get(url)
        ayah = response.json()
        return ayah['translations'][0]['text']
    # if you want to know whats going on here, its basically the same concept as above starting on line 19 with some omissions
    else:
        # since users will input [Ayahs] [start_num]-[end_num], we can split on the hyphen to get a list of ayah numbers
        endcaps = ayah_number.split("-")
        # unfortunately, we only have the start and end ayah numbers
        # so we need to get the ayah numbers in the middle for the api call
        start = int(endcaps[0])
        end = int(endcaps[1])
        ayah_numbers = [str(start)]
        for x in range(end - start):
            start += 1
            ayah_numbers.append(start)
        # now we have a list of the ayah numbers

        ayahs_in_english = ""
        for x in ayah_numbers:
            # get the ayah in arabic that we are iterating
            url = f'https://api.quran.com/api/v4/quran/translations/85?verse_key={surah_number}%3A{x}'
            response = requests.get(url)
            ayah = response.json()
            ayahs_in_english += ayah['translations'][0]['text'] + " "
        return ayahs_in_english

def surah_name_transliteration(surah_number):
    url = f'https://api.quran.com/api/v4/chapters/{surah_number}?language=en'

    response = requests.get(url)
    x = response.json()
    return x['chapter']['name_simple']

def open_browser(surah_number, ayah_number):
    # open it in the default browser
    # print(f'http://quran.com/{surah_number}/{ayah_number}/')
    webbrowser.open(f'http://quran.com/{surah_number}/{ayah_number}/', new=2)   

def ayah_printer(surah_number, ayah_number):
    # build copy paste item
    copypaste = ""

    # get the date
    now = datetime.datetime.now()
    day = now.strftime("%d")
    daymonth = now.strftime(f"%m/{day.lstrip('0')}")

    # add it all to a string
    first_line = "Ayah of the Day, " + daymonth + "\n\n"
    arabic = get_arabic(surah_number, ayah_number) + "\n\n"
    english = get_english(surah_number, ayah_number)
    surah_name = surah_name_transliteration(surah_number)
    name_line = "Surah " + surah_name + ", Ayah " + str(ayah_number) + "\n\n"
    copypaste = first_line + name_line + arabic + english 
    print(copypaste)

def random_ayah_picker():
    # create a data structure to put info that we will randomize from
    official_surahs_and_ayahs = []

    with open("SurahInfoSheet1.csv", "r") as surahinfo:
        # print(surahinfo.readlines())
        # loop through surah info csv document to strip information about surahs
        # index to second line in order to skip the header
        for x in surahinfo.readlines()[1:]:
            # print(x)
            # turn each line into a list so we can use index to parse through
            individual_info = x.split(",")
            # use index to get the surah order in quran
            surah_index = individual_info[0]
            # use index to get the number of ayahs in said surah
            surah_ayah_count = individual_info[2]
            # put those things into a structure for a tuple
            b = surah_index, surah_ayah_count
            # append them to the list as a tuple
            official_surahs_and_ayahs.append(tuple(b))

    # for x in official_surahs_and_ayahs:
    #     # print(x)
    ayahs_requested = int(input("How many ayahs do you want? "))
    
    i = 0
    while i < ayahs_requested:
        # pick a random tuple from the list
        surah = random.choice(official_surahs_and_ayahs)
        # print(surah)
        surah_number = surah[0]
        # print(surah_number)
        # pick a random ayah from the surah
        ayah_number = random.randint(1, int(surah[1]))
        # print(ayah_number)
        open_browser(surah_number, ayah_number)
        i += 1

def main():
    picker = ArgumentParser()
    picker.add_argument("-p", "--printer", action="store_true", help="Enable ayah printer functionality.")
    picker.add_argument("-r", "--random", action="store_true", help="Enable random ayah picker functionality.")
    picker.add_argument("--surah", default="")
    picker.add_argument("--ayah", default="")

    args = picker.parse_args()
    
    if args.printer:
        ayah_printer(args.surah, args.ayah)
    
    if args.random:
        random_ayah_picker()
    
    if not args.random and not args.printer:
        print("You need to select either -p or -r (--printer or --random) to continue")

if __name__ == '__main__':
    main()